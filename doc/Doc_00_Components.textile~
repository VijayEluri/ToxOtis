h1. OpenTox Components in ToxOtis

A Note for developers: OpenTox components are the <a href="http://github.com/alphaville/ToxOtis/tree/master/src/org/opentox/toxotis/core/">core elements</a> in ToxOtis. These are all entities manipulated in OpenTox each one of which has a corresponding representation in RDF, i.e. a standard representation of a data model that describes it. Example of such components are <a href="http://github.com/alphaville/ToxOtis/blob/master/src/org/opentox/toxotis/core/Algorithm.java">Algorithms</a>, <a href="http://github.com/alphaville/ToxOtis/blob/master/src/org/opentox/toxotis/core/Model.java">Models</a>, <a href="http://github.com/alphaville/ToxOtis/blob/master/src/org/opentox/toxotis/core/Task.java">Tasks</a> and <a href="http://github.com/alphaville/ToxOtis/blob/master/src/org/opentox/toxotis/core/Dataset.java">Datasets</a>. As far as their ontological nature and the corresponding RESTful API are concerned, you can find detailed documentation at the <a href="http://opentox.org/dev/apis/api-1.1">OpenTox site</a>. From a programmatic point of view, all classes in <code>org.opentox.toxotis.core</core> subclass <code>OTComponent</code>. This is an abstract class holding a URI and a MetaInfo field for all its subclasses; a very useful (abstract) method is included in this class: <code>public abstract Individual asIndividual(OntModel model)</code> which is implemented by all subclasses of OTComponent and allows the users to get an RDF representation straight from the component (we will provide some explanatory code snippets in the sequel). Other intermediate levels of abstraction are available such as <a href="http://github.com/alphaville/ToxOtis/blob/master/src/org/opentox/toxotis/core/OTOnlineResource.java">OTOnlineResource</a> and <a href="http://github.com/alphaville/ToxOtis/blob/master/src/org/opentox/toxotis/core/OTPublishable.java">OTPublishable</a>. All components are characterized by their meta information which consist of a subset of the Dublic Core properties, some RDFS and OWL properties and a couple of OpenTox specific properties (like ot:hasSource).



h4. 1. Algorithm

An algorithm is characterized by a set of Ontological Classes that classify it according to the OpenTox <a href="http://opentox.org/dev/apis/api-1.1/Algorithms">Algorithms Ontology</a>.

h4. 2. BibTeX

BibTeX is a bibliographic reference characterized by the following attributes:
* A BibTeX type which can be anyone of {Article,Book,Conference,Phdthesis,Entry}.
* The title
* An abstract
* The author
* Booktitle
* Chapter
* Copyright Note
* Edition, Editor and Year
* A cross reference to some other BibTeX resource
* Address
* Volume and Number
* Pages
* Journal in which it is publihsed
* ISBN and/or ISSN
* Keywords for easy lookup
* A key
* An annotation
* Series
* URL where more information can be found

The above attributes are compliant with the <a href="http://zeitkunst.org/bibtex/0.1/bibtex.owl">Knouf ontology</a> (see also <a href="http://oaei.ontologymatching.org/tests/301/onto.html">this summary</a>).

h4. 3. Conformer

A Conformer is an identifier of a unique chemical substance up to its 3D characteristics.